<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>